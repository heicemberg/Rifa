#!/usr/bin/env node

/**
 * SCRIPT DE DIAGN√ìSTICO NETLIFY - RIFA SILVERADO Z71 2024
 * 
 * Identifica problemas comunes de conexi√≥n Supabase en Netlify
 * Ejecutar: node scripts/diagnose-netlify.js
 */

console.log('üîç DIAGN√ìSTICO NETLIFY - RIFA SILVERADO Z71 2024');
console.log('='.repeat(60));

// 1. VERIFICAR VARIABLES DE ENTORNO
console.log('\n1Ô∏è‚É£ VERIFICANDO VARIABLES DE ENTORNO:');
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

console.log('‚úì NODE_ENV:', process.env.NODE_ENV);
console.log('‚úì NEXT_PUBLIC_SUPABASE_URL:', supabaseUrl ? `${supabaseUrl.substring(0, 30)}...` : '‚ùå NO DEFINIDA');
console.log('‚úì NEXT_PUBLIC_SUPABASE_ANON_KEY:', supabaseKey ? `${supabaseKey.substring(0, 20)}...` : '‚ùå NO DEFINIDA');

// 2. VALIDAR FORMATO DE CREDENCIALES
console.log('\n2Ô∏è‚É£ VALIDANDO FORMATO DE CREDENCIALES:');
try {
  if (!supabaseUrl) {
    console.log('‚ùå NEXT_PUBLIC_SUPABASE_URL no est√° definida');
  } else if (!supabaseUrl.includes('.supabase.co') && !supabaseUrl.includes('localhost')) {
    console.log('‚ùå URL de Supabase inv√°lida:', supabaseUrl);
  } else {
    console.log('‚úÖ URL de Supabase v√°lida');
  }

  if (!supabaseKey) {
    console.log('‚ùå NEXT_PUBLIC_SUPABASE_ANON_KEY no est√° definida');
  } else if (!supabaseKey.startsWith('eyJ')) {
    console.log('‚ùå Clave an√≥nima no es un JWT v√°lido');
  } else {
    console.log('‚úÖ Clave an√≥nima v√°lida');
  }
} catch (error) {
  console.log('‚ùå Error validando credenciales:', error.message);
}

// 3. PROBAR CONEXI√ìN DIRECTA
console.log('\n3Ô∏è‚É£ PROBANDO CONEXI√ìN DIRECTA:');
if (supabaseUrl && supabaseKey && typeof fetch !== 'undefined') {
  try {
    console.log('üîÑ Intentando conectar a Supabase...');
    
    fetch(`${supabaseUrl}/rest/v1/`, {
      headers: {
        'Authorization': `Bearer ${supabaseKey}`,
        'apikey': supabaseKey,
        'Content-Type': 'application/json'
      },
      signal: AbortSignal.timeout(10000) // 10s timeout
    })
    .then(response => {
      if (response.ok) {
        console.log('‚úÖ Conexi√≥n exitosa a Supabase');
        return response.json();
      } else {
        console.log('‚ùå Error HTTP:', response.status, response.statusText);
        throw new Error(`HTTP ${response.status}`);
      }
    })
    .then(data => {
      console.log('‚úÖ Respuesta de Supabase recibida');
    })
    .catch(error => {
      console.log('‚ùå Error de conexi√≥n:', error.message);
      
      // Diagn√≥stico espec√≠fico de errores
      if (error.message.includes('timeout')) {
        console.log('üí° SOLUCI√ìN: El timeout sugiere problemas de red o CSP');
      } else if (error.message.includes('CORS')) {
        console.log('üí° SOLUCI√ìN: Error de CORS - verifica dominios en Supabase');
      } else if (error.message.includes('403')) {
        console.log('üí° SOLUCI√ìN: Error 403 - verifica RLS y permisos');
      } else if (error.message.includes('401')) {
        console.log('üí° SOLUCI√ìN: Error 401 - verifica la clave API');
      }
    });
    
  } catch (error) {
    console.log('‚ùå Error configurando test de conexi√≥n:', error.message);
  }
} else {
  console.log('‚è≠Ô∏è Saltando test de conexi√≥n (faltan credenciales o fetch no disponible)');
}

// 4. INFORMACI√ìN DEL ENTORNO
console.log('\n4Ô∏è‚É£ INFORMACI√ìN DEL ENTORNO:');
console.log('‚úì Platform:', process.platform);
console.log('‚úì Node Version:', process.version);
console.log('‚úì Timezone:', Intl.DateTimeFormat().resolvedOptions().timeZone);
console.log('‚úì User Agent:', typeof navigator !== 'undefined' ? navigator.userAgent?.substring(0, 50) : 'N/A (Server)');

// 5. RECOMENDACIONES
console.log('\n5Ô∏è‚É£ RECOMENDACIONES PARA NETLIFY:');
console.log(`
üîß PASOS PARA SOLUCIONAR EN NETLIFY:

1. **Variables de Entorno en Netlify UI:**
   - Ve a: Site Settings > Environment Variables
   - Agrega: NEXT_PUBLIC_SUPABASE_URL = ${supabaseUrl || 'https://tu-proyecto.supabase.co'}
   - Agrega: NEXT_PUBLIC_SUPABASE_ANON_KEY = ${supabaseKey ? '(tu clave actual)' : '(tu clave de Supabase)'}

2. **Verificar CSP en Headers:**
   - Revisa netlify.toml > Content-Security-Policy
   - Debe incluir: connect-src 'self' https://*.supabase.co wss://*.supabase.co

3. **Verificar Build Command:**
   - Build command: npm run build
   - Publish directory: dist

4. **Despu√©s de cambios:**
   - Haz un nuevo deploy (no solo republish)
   - Verifica logs de deploy en Netlify
   - Prueba en modo inc√≥gnito

5. **Si persiste el error:**
   - Agrega console.log en src/lib/supabase-client.ts
   - Revisa Function logs en Netlify
   - Verifica que no hay Edge Functions interferiendo
`);

console.log('\n' + '='.repeat(60));
console.log('üèÅ DIAGN√ìSTICO COMPLETADO');

// Export para usar en otros scripts
module.exports = {
  checkEnvironment: () => ({ supabaseUrl, supabaseKey }),
  testConnection: async () => {
    // Implementaci√≥n del test para uso program√°tico
  }
};